#include <iostream>
using namespace std;

void simple();

int main()
{
    cout << "main() 에서 simple() 함수를 호출합니다: \n";
    simple();
    cout << "main()이 simple() 함수와 종료됩니다. \n";
    //cin.get
    return 0;
}

void simple()
{
    cout << "여기는 simple() 함수입니다. \n";
}

/*
함수의 기초(복습)
함수를 사용하려면 다음과 같은 작업을 필수로 해야한다.
- 함수 정의 제공
- 함수 원형 제공
- 함수 호출

라이브러리 함수는 이미 헤더 파일에 정의되어 있기에 그에 상응하는 헤더파일만 제공한다면 사용할수 있다.
C++ 표준 라이브러리는 문자열의 길이를 구하는 strlen()함수를 제공한다. 

함수는 두가지 종류가 있다. 하나는 리턴값이 있는 함수이고 하나는 리턴값이 없는 함수이다. 
리턴값이 없는 함수를 우리는 void형 함수라 한다. 
void 형 함수는 어떤 종류의 행동을 수행한다. 예를 들어 주어진 횟수(n) 만큼 Cheers! 를 출력하는 void형 함수는 다음과 같을 것이다.

void cheers(int n)
{
    for (int i = 0; i< n; i++)
    {  
        cout << "Cheers! ";
    }
    cout << endl; 
}

리턴값이 있는 함수는 자신을 호출한 함수에게 되돌려줄 리턴값을 만든다.  다시 말해 9.0 의 제곱근(sqrt(9.0)) 을 리턴하는 함수가 있을 때, 그 함수의 호출은 리 턴값 3으로 대체된다.
리턴값이 있는 함수는 그것이 리턴하는 값과 동일한 데이터 형으로 선언된다. 
리턴값이 있는 함수를 사용할때 리턴 타입과 실제 리턴값의 데이터형이 일치하지 않을시 (EX: 리턴타입은 더블, 리턴 데이터형은 int) 리턴 데이터형은 리턴 타입으로 자동으로 변환된다. 
** 배열은 리턴값으로 사용할수 없다. 하지만 구조체나 객체의 일부로 되어 있는 배열은 리턴할 수 있다
*/

/*
main() 에서 simple() 함수를 호출합니다: 
여기는 simple() 함수입니다.
main()이 simple() 함수와 종료됩니다. 
*/
