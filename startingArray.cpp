#include <iostream>
using namespace std;


int main()
{
    int yams[3];
    yams[0] = 7;
    yams[1] = 8;
    yams[2] = 6;

    int yamcosts[3] = {200, 300, 50};

    cout << "고구마 합계 = ";
    cout << yams[0] + yams[1] + yams[2] << endl;
    cout << yams[1] << " 개가 들어 있는 포장은 ";
    cout << "개당 " << yamcosts[1] << "원씩입니다. \n";
    int total = yams[0] * yamcosts[0] + yams[1] * yamcosts[1];
    total = total + yams[2] * yamcosts[2];
    cout << "세 포장의 총 가격은 " << total << "원입니다. \n";
    cout << "\nyams 배열의 크기는 " << sizeof yams;
    cout << "바이트입니다.\n";
    cout << "원소 하나의 크기는 " << sizeof yams[0];
    cout << "바이트입니다.\n";

    return 0;
}

/*
    복합 데이터형이란?
    기본 정수형과 부동 소수점형들로 이루어진 데이터형이다. 

    *배열
    데이터형이 같은 여러 개의 값을 연속적으로 저장할수 있는 데이터 구조.
    배열에서 각 값은 배열 원소 라는 개별 공간에 저장된다.
    배열은 선언구문을 사용하여 생성된다.
    ** 각 원속에 저장될 값의 데이터형
    ** 배열의 이름
    ** 배열 원소의 개수

    short months [12];  //12개의 short형 값을 넣을수 있는 배열을 생성한다.
    이는 
    typename arrayName [arraySize];
    인데 여기서 arraySize 는 프로그램이 실행되는 동안에 값이 결정되는 변수가 될수없다.

    배열에서는 개별원소에 인덱스라는것을 사용하여 접근할수있는데
    여기서 인덱스는 항상 0 부터 시작한다는 것을 명심하자 

    배열 초기화 규칙
    대괄호 안을 비워두면 개별 원소 개수에 따라서 컴파일러가 알아서 개수를 지정해준다
    --> int countArrary [] = {3, 2 ,3 ,1}   // int 데이터형의 개별원소를 총 4개 생성해낸다
    배열은 초기 선언때만 정의할수 있으며 그 이후로는 정의하는것이 불가능하다
    --> hand[4] = {5,6,7,8}   //d\이것은 틀리다]
    --> hand = cards;   //이것 역시 틀리다. 배열을 또다른 배열에게 동일시 시킬수 없다.
    인덱스를 사용하여 배열을 부분적으로 손보는것은 가능하다.
    만약 배열을 선언할때 배열 원소의 개수보다 모자라게 값을 제공할경우 남는 값들은 모두 0 이 된다. 
    
*/

/*
    ** OUTPUT
고구마 합계 = 21
8 개가 들어 있는 포장은 개당 300원씩입니다. 
세 포장의 총 가격은 4100원입니다.

yams 배열의 크기는 12바이트입니다.
원소 하나의 크기는 4바이트입니다.
*/

