#include <iostream>
using namespace std;
unsigned long left(unsigned long num, unsigned ct);
char * left (const char * str, int n = 1);
int main()
{
    const char * trip = "Hawaii!!";
    unsigned long n = 12345678;
    int i; 
    char * temp;
    for(i = 1; i < 10; i++)
    {
        cout << left(n,i) << endl;
        temp = left(trip, i);
        cout << temp << endl;
        delete []temp;
    }
    return 0; 
}
unsigned long left (unsigned long num, unsigned ct)
{
    unsigned digits = 1;
    unsigned long n = num;

    if(ct == 0 || num == 0)
        return 0; 
    while(n /= 10)
        digits++;
    if(digits > ct)
    {
    ct = digits - ct; 
    while(ct--)
        num /= 10;
    return num;
    }
    else
    {
        return num; 
    }
}

char * left(const char * str, int n)
{
    if (n < 0)
        n = 0;
    char * p = new char[n+1];
    int i;
    for(i =0; i <n && str[i]; i++)
        p[i] = str[i];
    while (i <= n)
        p[i++] = '\0';
    return p;
}


/*
함수 오버로딩
함수 오버로딩 이라는 표현은 여러개의 함수를 같은 이름으로 연결한다는 뜻이다.
함수 오버로딩의 열쇠는 함수의 매개변수 리스트이다. 이것을 함수 시그내처 라고한다. 

함수 오버로딩에서 참조는 구별되느 않는다
const 와 const가 아닌 변수는 구별된다. 
함수 오버로딩을 가능하게 하는것은 함수의 시그내처이다. 



*/

/*
1
H
12
Ha
123
Haw
1234
Hawa
12345
Hawai
123456
Hawaii
1234567
Hawaii!
12345678
Hawaii!!
12345678
Hawaii!!
*/
