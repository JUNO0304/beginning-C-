#include <iostream>
using namespace std;
const int ArSize = 6; 
int main()
{
    float naaq[ArSize];
    cout << "동료들의 뉴에이지 자각 지수 (NAAQ) 를 입력하십시오. \n"
        << ArSize << "명의 데이터를 모두 입력했거나, 음수를 입력하면 \n"
        << "while 루프를 탈출합니다. \n";

    int i = 0;
    float temp;
    cout << "첫 번째 값: ";
    cin >> temp; 
    while( i < ArSize && temp >= 0)
    {
        naaq[i] = temp;
        ++i;
        if (i < ArSize)
        {
            cout << "그 다음값: ";
            cin >> temp;
        }
    }
    if(i == 0)
        cout << "입력한 데이터가 없으므로 프로그램을 종료합니다ㅣ. \n";
    else
    {
        cout << "당신의 NAAQ 를 입력하십시오: ";
        float you;
        cin >> you;
        int count = 0;
        for (int j = 0; j < i; j++)
            if (naaq[j] > you)
                ++count;
        cout << "동료들 중에서 " << count;
        cout << "명이 당신보다 NAAQ가 높습니다. \n";
    }
    return 0; 
}

/*
    논리곱 AND 연산자 (&&)
    &&로 나타내는 논리곱 연산자도 두 개의 표현식을 하나로 결합한다. 
    두개의 표현식이 모두 참일때에만 전체 표현식이 참이 된다.
    다음은 이것을 설명하는 예이다.
    5 ==5 && 4 == 4;    // 두표현식이 모두 참이므로 참이다
    5 == 3 && 4 == 4;   //첫 째 표현식이 거짓이므로 거짓이다
    5 > 3 && 5 > 10;    //둘째 표현식이 거짓이므로 거짓이다
    5 > 8 && 5 < 10;    // 첫째 표현식이 거짓이므로 거짓이다
    5 < 8 && 5 > 2;     // 두표현식이 모두 참이므로 참이다
    5 > 8 && 5 < 2;     // 두 두표현식이 모두 거짓이므로 거짓이다

    위 프로그램은 입력될 값을 temp라는 임시 변수에 저장한다.
    그러고 나서 while 조건 검사가 배열에 저장할 공간이 남아 있는지 (i < ArSize), 입력된 값이 음수가 아닌지 (temp >= 0) 검사한다
    이 두가지 조건을 모두 만족하면 프로그램은 temp값을 배열에 저장하고, 배열 인덱스 i를 하나 증가시킨다.
    

*/

/*
    OUTPUT
동료들의 뉴에이지 자각 지수 (NAAQ) 를 입력하십시오. 
6명의 데이터를 모두 입력했거나, 음수를 입력하면 
while 루프를 탈출합니다.
첫 번째 값: 28
그 다음값: 72
그 다음값: 15
그 다음값: 6
그 다음값: 130
그 다음값: 145
당신의 NAAQ 를 입력하십시오: 50
동료들 중에서 3명이 당신보다 NAAQ가 높습니다. 

음수를 입력했을경우
동료들의 뉴에이지 자각 지수 (NAAQ) 를 입력하십시오. 
6명의 데이터를 모두 입력했거나, 음수를 입력하면 
while 루프를 탈출합니다.
첫 번째 값: 123
그 다음값: 119
그 다음값: 4
그 다음값: 89
그 다음값: -1 
당신의 NAAQ 를 입력하십시오: 123.031  
동료들 중에서 0명이 당신보다 NAAQ가 높습니다. 

*/
