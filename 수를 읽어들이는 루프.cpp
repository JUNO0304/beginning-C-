/*낚시터에서 하루동안에 낚은 물고기들의 평균 몸무게를 계산하는 프로그램을 작성한다.
하루에 최대 5마리까지 낚을수 있다고 하자.
그러므로 5개의 원소를 수용하는 배열에 모든 데이터를 저장할 수있다.
*/
#include <iostream>
using namespace std;
const int Max =5; 
int main()
{
    //데이터를 입력받는다
    double fish[Max];
    cout << "오늘 낚은 물고기의 무게를 입력하십시오. \n";
    cout << "물고기는 최대 " << Max << "마리까지 낚을 수 있습니다. \n"
        << "<입력을 끝내려면 q를 누르십시오.> \n";
    cout << "fish #1: ";
    int i = 0;
    while (i < Max && cin >> fish[i]){
        if (++i < Max)
            cout << "fish #" << i+1 << ": ";
    }
    //평균을 계산한다
    double total = 0.0;
    for(int j = 0; j < i; j++)
        total += fish[j];
    
    //결과를 보고한다
    if(i == 0)
        cout << "물고기를 한 마리도 낚지 못하셨군요. \n";
    else
        cout << "물고기 " << i << "마리의 평균 무게는 "
            << total/i << "그램입니다. \n";
    
    
    cout << "프로그램을 종료합니다. \n";

    return 0; 
}


/*
    수를 읽어들이는 루프
    일련의 수를 배열에 읽어들이는 프로그램을 작성한다고 가정하자.
    배열이 다 차기 전에 입력을 멈출 수 있는 기회를 사용자에게 주어야 한다.
    이것을 하는 한 가지 방법은, cin이 작동하는 방식을 이용하는것이다. 다음과 같은 코드를 생각해보자.
    int n;
    cin >> n; 
    이 경우에 사용자가 수를 입력하는 대신에 단어를 입력하면 무슨 일이 벌어질까?
    그러한 상황에서는 네 가지 일이 벌어진다
    -n의 값은 변하지 않는다
    - 입력 큐에 잘못된 입력이 그대로 유지된다
    - cin 객체의 에러 플래그가 설정된다
    - cin 메서드 호출이 false(bool 형으로 변환된다면)를 리턴한다
cin 메서드가 false 를 리턴한다는 사실은, 수를 읽어들이는 루프를 종료시키기 위해 수가 아닌 입력을 사용할 수 있다는 것을 의미한다.
그리고 프로그램이 다시 입력을 받기위해서는 에러 플래그를 초기화 해야 한다. 
파일 끝(EOF) 조건 을 초기화하는 clear() 메서드는 불량 입력 플래그도 초기화한다.



*/

/*
    OUTPUT
오늘 낚은 물고기의 무게를 입력하십시오. 
물고기는 최대 5마리까지 낚을 수 있습니다. 
<입력을 끝내려면 q를 누르십시오.>
fish #1: 30
fish #2: 35
fish #3: 25
fish #4: 40
fish #5: q
물고기 4마리의 평균 무게는 32.5그램입니다. 
프로그램을 종료합니다.

*/
