#include <iostream>
using namespace std;
const int ArSize = 8;
int sum_arr(int arr[], int n);

int main()
{
    int cookies[ArSize] = {1,2,4,8,16,32,64,128};
    cout << cookies << " = 배열 주소, ";
    cout << "sizeof cookies = " << sizeof cookies << endl;
    int sum = sum_arr(cookies, ArSize);
    cout << "먹은 과자 수 합계: " << sum << endl;
    sum = sum_arr(cookies, 3);
    cout << "처음 세 사람은 과자 " << sum << "개를 먹었습니다. \n";
    sum = sum_arr(cookies +4, 4);
    cout << "마지막 네 사람은 과자 " << sum << "개를 먹었습니다.\n";
    return 0;
}

int sum_arr(int arr[], int n)
{
    int total = 0;
    cout << arr << " = arr, ";
    cout << "sizeof arr = " << sizeof arr << endl;
    for(int i = 0; i < n; i++)
    {
        total = total + arr[i];
    }
    return total; 
}


/*
배열을 매개변수로 사용하는 것의 의미
함수에 일반 변수를 전달하면 함수는 복사본을 가지고 일하는것이지만, 배열의 주소를 건네주면 원본을 가지고 작업하는것과 똑같다.
왜 우리는 배열의 원본을 가지고 작업해야할까? 
    - 배열의 크기가 너무 커질시, 소모하는 메모리가 많아진다.
    - 컴파일 시간이 오래걸린다.

프로그램 분석.
sizeof cookies 는 32 이지만 sizeof arr 는 8이다. 그 이유는 sizeof cookies 는 배열 전체의 크기를 의미하지만, sizeof arr는 포인터 변수의 크기를 의미하기 때문이다.
세번째 함수호출때 우리는 배열의 시작지점을 속여서 함수에 전달했다. 함수는 그것을 시작지점이라고 생각하고 마지막 네명이 먹은 과자개수만 카운트한다.
*/

/*
0x5ffe30 = 배열 주소, sizeof cookies = 32
0x5ffe30 = arr, sizeof arr = 8
먹은 과자 수 합계: 255
0x5ffe30 = arr, sizeof arr = 8
처음 세 사람은 과자 7개를 먹었습니다.
0x5ffe40 = arr, sizeof arr = 8
마지막 네 사람은 과자 240개를 먹었습니다.
*/
